name: Deploy to AWS EC2

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    name: Deploy on EC2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node and PNPM
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Install PNPM
      run: npm install -g pnpm

    - name: Create .env file
      run: |
        echo "NEXT_PUBLIC_GOOGLE_CLIENT_ID=${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_ID }}" >> .env
        echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
        echo "NEXT_PUBLIC_BACKEND_URL=${{ secrets.NEXT_PUBLIC_BACKEND_URL }}" >> .env
        echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> .env
        echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env

    - name: Install dependencies
      run: pnpm install

    - name: Build Next.js app
      run: pnpm run build

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
        
        # Test SSH connection
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "echo 'SSH connection successful'"

    - name: Create app directory on EC2
      run: |
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "mkdir -p /home/ubuntu/app"

    - name: Copy build to EC2
      run: |
        rsync -avz --delete -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" \
          .next/ public/ package.json pnpm-lock.yaml .env node_modules/ \
          ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/app/

    - name: Run app with PM2 on EC2
      run: |
        ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
          cd /home/ubuntu/app
          
          # Install pnpm if not already installed
          command -v pnpm >/dev/null 2>&1 || npm install -g pnpm
          
          # Install PM2 if not already installed
          command -v pm2 >/dev/null 2>&1 || npm install -g pm2
          
          # Stop and delete existing PM2 processes
          pm2 delete nextjs-app || true
          
          # Start the application with PM2
          pm2 start "pnpm run start" --name nextjs-app
          pm2 save
          pm2 startup
        EOF

    - name: Verify deployment
      run: |
        echo "Deployment completed successfully"
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "pm2 status"